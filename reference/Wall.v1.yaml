openapi: 3.0.0
info:
  title: Wall
  version: '1.0'
servers:
  - url: 'https://api.wall.one'
    description: Production
paths:
  /auth/login:
    post:
      summary: Login
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth+Response'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: Unathorized.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth+Request'
        description: Successful login response.
      description: Login user and get token.
      tags:
        - auth
  /articles:
    get:
      summary: Get all articles
      tags:
        - article
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Articles'
              examples:
                example-1:
                  value:
                    result:
                      - id: string
                        title: string
                        content: string
                        image: string
                        articleCategory:
                          id: string
                          title: string
                    status: string
      operationId: get-articles
      description: Get all articles
  /register:
    post:
      summary: Register
      operationId: post-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User+Resource'
      description: Register new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register+Request'
      tags:
        - auth
  /stories:
    get:
      summary: Get all stories
      tags:
        - story
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Stories'
              examples:
                example-1:
                  value:
                    data:
                      - id: string
                        title: string
                        image: string
                        isViewed: true
                        publishedAt: string
                        screens:
                          - id: string
                            title: string
                            image: string
                            text: string
                            actionText: string
      operationId: get-stories
      description: Get all stories
  '/articles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get article
      tags:
        - article
        - get
        - item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Article'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      id: string
                      title: string
                      content: string
                      image: string
                      articleCategory:
                        id: string
                        title: string
      operationId: get-articles-id
  /article-categories:
    get:
      summary: Get article categories
      tags:
        - category
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+ArticleCategories'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      - id: string
                        title: string
      operationId: get-categories
      description: Get article categories
    parameters: []
  /vpn/servers:
    get:
      summary: Get vpn servers
      tags:
        - server
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Servers'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      - id: string
                        country: string
                        city: string
                        label: string
                        status: string
                        latitude: string
                        longitude: string
      operationId: get-servers
      description: Get vpn servers
    parameters: []
  '/vpn/servers/{id}/credentials':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get server credential
      tags:
        - credential
        - get
        - item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Credential'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      id: string
                      server:
                        id: string
                        country: string
                        city: string
                        label: string
                        status: string
                        latitude: string
                        longitude: string
                      protocol: string
                      status: string
      operationId: get-vpn-servers-id
      description: Get server credential
      parameters:
        - schema:
            type: string
          in: query
          name: protocol
  /notifications:
    get:
      summary: Get notifications
      tags:
        - notifications
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Notifications'
      operationId: get-notifications
      description: Get last 30 notifications
    post:
      summary: View notifications
      operationId: post-notifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Notifications'
      description: View all notifications
      tags:
        - notifications
        - all
        - get
  '/stories/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get story
      tags:
        - story
        - get
        - item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Story'
      operationId: get-stories-id
      description: Get story by id
  /password/reset:
    post:
      summary: ''
      operationId: post-password-reset
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Password+Reset+Response'
              examples:
                example-1:
                  value:
                    message: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password+Reset+Request'
            examples:
              example-1:
                value:
                  email: user@example.com
      tags:
        - auth
        - password
        - reset
  /password/change:
    post:
      summary: Password change request
      operationId: post-password-change
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Password+Change+Response'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password+Change+Request'
      tags:
        - auth
        - password
        - change
  /courses:
    get:
      summary: Get all courses
      tags:
        - course
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Course'
              examples: {}
      operationId: get-courses
  '/lessons/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get lesson by id
      tags:
        - lesson
        - get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Lesson'
      operationId: get-lessons-id
  '/lesson-chapters/{id}/pass':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ''
      operationId: post-lesson-chapters-id-pass
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Chapter'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      title: string
                      content: string
                      order: string
                      isPassed: string
      tags:
        - lesson-chapter
  '/quizzes/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get quiz by id
      tags:
        - quiz
        - get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Quiz'
              examples:
                example-1:
                  value:
                    status: string
                    result:
                      title: string
                      content: string
                      quizableType: string
                      quizableId: string
                      questions:
                        - content: string
                          order: string
                          correctMessage: string
                          inCorrectMessage: string
      operationId: get-quizzes-id
  /courses/progress:
    get:
      summary: Get course progress
      tags:
        - course
        - get
        - progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Progress'
      operationId: get-courses-progress
    post:
      summary: Update progress
      operationId: post-courses-progress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request-Progress'
      parameters: []
      tags:
        - course
        - post
        - progress
      description: ''
components:
  schemas:
    Model+Response+Article:
      title: Model+Response+Article
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        image:
          type: string
        articleCategory:
          $ref: '#/components/schemas/Model+Response+ArticleCategory'
      description: ''
      x-examples: {}
    Model+Response+ArticleCategory:
      title: Model+Response+ArticleCategory
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    Response+Articles:
      title: Response+Articles
      type: object
      x-examples: {}
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Article'
        status:
          type: string
    Auth+Request:
      title: Auth+Request
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      x-examples:
        example-1:
          email: test@test.com
          password: testtest
    Auth+Response:
      description: Response for auth requests.
      type: object
      title: Auth+Response
      properties:
        accessToken:
          type: string
          minLength: 1
        tokenType:
          type: string
          minLength: 1
        expiresIn:
          type: number
        user:
          $ref: '#/components/schemas/User+Resource'
      required:
        - accessToken
        - tokenType
        - expiresIn
    Register+Request:
      title: Register+Request
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
      required:
        - email
        - name
        - password
        - passwordConfirmation
      description: Request for user registration.
    Register+Response:
      title: Register+Response
      type: object
      properties:
        id:
          type: string
      description: Response after registration
    User+Resource:
      title: User+Short+Resource
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Model+Response+Story:
      title: Model+Response+Story
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        image:
          type: string
        isViewed:
          type: boolean
        publishedAt:
          type: string
        screens:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+StoryScreen'
      x-examples: {}
    Model+Response+StoryScreen:
      title: Model+Response+StoryScreen
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        image:
          type: string
        text:
          type: string
        actionText:
          type: string
    Response+Stories:
      title: Response+Stories
      type: object
      x-examples:
        example-1:
          data:
            - id: string
              title: string
              image: string
              isViewed: true
              publishedAt: string
              screens:
                - id: string
                  title: string
                  image: string
                  text: string
                  actionText: string
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Story'
        status:
          type: string
    Response+Article:
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Article'
      title: ''
    Response+ArticleCategories:
      title: Response+ArticleCategories
      type: object
      properties:
        status:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+ArticleCategory'
    Model+Response+Server:
      title: Model+Response+Server
      type: object
      properties:
        id:
          type: string
        country:
          type: string
        city:
          type: string
        label:
          type: string
        status:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        ipAddress:
          type: string
    Response+Servers:
      title: Response+Servers
      type: object
      properties:
        status:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Server'
    Model+Response+Credential:
      title: Model+Response+Credential
      type: object
      properties:
        id:
          type: string
        server:
          $ref: '#/components/schemas/Model+Response+Server'
        protocol:
          type: string
        status:
          type: string
    Response+Credential:
      title: Response+Credential
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Credential'
    Model+Response+Notification:
      title: Model+Response+Notification
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        message:
          type: string
        icon:
          type: string
        isViewed:
          type: boolean
        createdAt:
          type: integer
    Response+Story:
      title: Response+Story
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Model+Response+Story'
        status:
          type: string
    Response+Notifications:
      title: Response+Notifications
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Notification'
        status:
          type: string
    Password+Reset+Request:
      title: Password+Reset+Request
      type: object
      properties:
        email:
          type: string
          format: email
      required:
        - email
    Password+Reset+Response:
      title: Password+Reset+Response
      type: object
      properties:
        message:
          type: string
    Password+Change+Request:
      title: Password+Change+Request
      type: object
      properties:
        email:
          type: string
        token:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
    Password+Change+Response:
      title: Password+Change+Response
      type: object
      properties:
        message:
          type: string
    Model+Response+Course:
      title: Model+Response+Course
      type: object
      x-examples:
        example-1:
          title: string
          lessons:
            - order: string
              hint: string
              content: string
              primaryImage: string
              chapters:
                - title: string
                  content: string
                  order: string
                  isPassed: string
      properties:
        title:
          type: string
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Short+Lesson'
        quiz:
          $ref: '#/components/schemas/Model+Response+Short+Quiz'
    Model+Response+Full+Lesson:
      title: Model+Response+Full+Lesson
      type: object
      x-examples:
        example-1:
          order: string
          hint: string
          content: string
          primaryImage: string
          chapters:
            - title: string
              content: string
              order: string
              isPassed: string
      properties:
        order:
          type: string
        hint:
          type: string
        content:
          type: string
        primaryImage:
          type: string
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Full+Chapter'
    Model+Response+Short+Lesson:
      title: Model+Response+Short+Lesson
      type: object
      x-examples:
        example-1:
          order: string
          hint: string
          content: string
          primaryImage: string
          chapters:
            - title: string
              content: string
              order: string
              isPassed: string
      properties:
        order:
          type: string
        hint:
          type: string
        content:
          type: string
        primaryImage:
          type: string
        chapters:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Short+Chapter'
    Model+Response+Full+Chapter:
      title: Model+Response+Full+Chapter
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        order:
          type: string
        isPassed:
          type: string
      x-examples:
        example-1:
          title: string
          content: string
          order: string
          isPassed: string
    Model+Response+Short+Chapter:
      title: Model+Response+Short+Chapter
      type: object
      x-examples:
        example-1:
          title: string
          content: string
          order: string
      properties:
        title:
          type: string
        content:
          type: string
        order:
          type: string
    Response+Course:
      title: Response+Course
      type: object
      x-examples:
        example-1:
          result: string
          status:
            - title: string
              lessons:
                - order: string
                  hint: string
                  content: string
                  primaryImage: string
                  chapters:
                    - title: string
                      content: string
                      order: string
                      isPassed: string
      properties:
        status:
          type: string
        result:
          type: object
          properties:
            courses:
              type: array
              items:
                $ref: '#/components/schemas/Model+Response+Course'
            updatedAt:
              type: integer
    Response+Lesson:
      title: Response+Lesson
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Full+Lesson'
        quiz:
          $ref: '#/components/schemas/Model+Response+Short+Quiz'
    Response+Chapter:
      title: Response+Chapter
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Chapter'
    Model+Response+Quiz:
      title: Model+Response+Quiz
      type: object
      description: ''
      properties:
        title:
          type: string
        content:
          type: string
        quizableType:
          type: string
        quizableId:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+QuizQuestion'
    Model+Response+Short+Quiz:
      title: Model+Response+Short+Quiz
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        quizableType:
          type: string
        quizableId:
          type: string
    Model+Response+QuizQuestion:
      title: Model+Response+QuizQuestion
      type: object
      properties:
        content:
          type: string
        order:
          type: string
        correctMessage:
          type: string
        inCorrectMessage:
          type: string
    Response+Quiz:
      title: Response+Quiz
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Quiz'
    Model+Response+Progress:
      title: Model+Response+Progress
      type: object
      properties:
        id:
          type: integer
        lessons:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              chapterProgress:
                type: object
                properties:
                  total:
                    type: integer
                  finished:
                    type: integer
              quizProgress:
                type: object
                properties:
                  tries:
                    type: integer
                  progress:
                    type: object
                    properties:
                      result:
                        type: integer
                      max:
                        type: integer
        quizProgress:
          type: object
          properties:
            tries:
              type: integer
            progress:
              type: object
              properties:
                result:
                  type: integer
                max:
                  type: integer
    Response+Progress:
      title: Response+Progress
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Progress'
        status:
          type: string
    Request-Progress:
      $ref: '#/components/schemas/Model+Response+Progress'
      description: Progress request
  securitySchemes:
    Token:
      name: Authorization
      type: apiKey
      in: header
tags:
  - name: auth
  - name: article
  - name: get
  - name: all
  - name: story
  - name: category
  - name: item
  - name: server
  - name: credential
  - name: notifications
  - name: Password
  - name: password
  - name: course
  - name: lesson
  - name: lesson-chapter
  - name: quiz
  - name: progress
  - name: reset
  - name: change
  - name: post
