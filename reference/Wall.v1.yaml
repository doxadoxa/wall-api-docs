openapi: 3.0.0
info:
  title: Wall
  version: '1.0'
servers:
  - url: 'https://api.wall.one'
    description: Production
paths:
  /auth/login:
    post:
      summary: Login
      operationId: post-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth+Response'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: Unathorized.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth+Request'
        description: Successful login response.
      description: Login user and get token.
      tags:
        - auth
  /articles:
    get:
      summary: Get all articles
      tags:
        - article
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Article'
              examples: {}
      operationId: get-articles
      description: Get all articles
  /register:
    post:
      summary: Register
      operationId: post-register
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User+Resource'
      description: Register new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register+Request'
      tags:
        - auth
  /stories:
    get:
      summary: Get all stories
      tags:
        - story
        - get
        - all
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response+Story'
              examples:
                example-1:
                  value:
                    data:
                      - id: string
                        title: string
                        image: string
                        isViewed: true
                        publishedAt: string
                        screens:
                          id: string
                          title: string
                          image: string
                          text: string
                          actionText: string
      operationId: get-stories
      description: Get all stories
  '/articles/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-articles-id
components:
  schemas:
    Model+Response+Article:
      title: Model+Response+Article
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        image:
          type: string
        articleCategory:
          $ref: '#/components/schemas/Model+Response+ArticleCategory'
      description: ''
      x-examples: {}
    Model+Response+ArticleCategory:
      title: Model+Response+ArticleCategory
      type: object
      properties:
        id:
          type: string
        title:
          type: string
    Response+Articles:
      title: Response+Articles
      type: object
      x-examples: {}
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Article'
        status:
          type: string
    Auth+Request:
      title: Auth+Request
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      x-examples:
        example-1:
          email: test@test.com
          password: testtest
    Auth+Response:
      description: Response for auth requests.
      type: object
      properties:
        accessToken:
          type: string
          minLength: 1
        tokenType:
          type: string
          minLength: 1
        expiresIn:
          type: number
      required:
        - accessToken
        - tokenType
        - expiresIn
      title: Auth+Response
    Register+Request:
      title: Register+Request
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
        passwordConfirmation:
          type: string
      required:
        - email
        - name
        - password
        - passwordConfirmation
      description: Request for user registration.
    Register+Response:
      title: Register+Response
      type: object
      properties:
        id:
          type: string
      description: Response after registration
    User+Resource:
      title: User+Short+Resource
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Model+Response+Story:
      title: Model+Response+Story
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        image:
          type: string
        isViewed:
          type: boolean
        publishedAt:
          type: string
        screens:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+StoryScreen'
      x-examples: {}
    Model+Response+StoryScreen:
      title: Model+Response+StoryScreen
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        image:
          type: string
        text:
          type: string
        actionText:
          type: string
    Response+Story:
      title: Response+Story
      type: object
      x-examples:
        example-1:
          data:
            - id: string
              title: string
              image: string
              isViewed: true
              publishedAt: string
              screens:
                - id: string
                  title: string
                  image: string
                  text: string
                  actionText: string
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Model+Response+Story'
    Response+Article:
      type: object
      properties:
        status:
          type: string
        result:
          $ref: '#/components/schemas/Model+Response+Article'
      title: ''
  securitySchemes:
    Token:
      name: Authorization
      type: apiKey
      in: header
tags:
  - name: auth
  - name: article
  - name: get
  - name: all
  - name: story
